#!/usr/bin/env node
/*****************************************************************************/
/*						Script de inicio                                     */
/*****************************************************************************/
//valores por defecto de las variable de entorno
process.env.DEBUG = process.env.npm_package_config_debug || '*';
process.env.PORT =  process.env.npm_package_config_port || 5000;
process.env.NODE_ENV = process.env.npm_package_config_nodeEnv || "developement";
process.env.DB = process.env.npm_package_config_db || "false"
//Parseo de la linea de comando
const commands = process.argv.slice(2, process.argv.lenght);
commands.forEach((arg, index) => {
	switch(arg){
		case '--port': {
			if (parseInt(commands[index + 1]) < 2000 || parseInt(commands[index + 1]) > 20000) console.log('Numero de puerto no valido');
			else process.env.PORT = commands[index + 1]; 
			commands.shift();
			break;
		}
		case '--debug': {
			process.env.DEBUG = commands[index + 1]; 
			commands.shift();
			break;
		} 
		case '--env': {
			if (commands[index + 1] === 'developement' || commands[index + 1] === 'production') process.env.NODE_ENV = commands[index + 1];
			else console.log('Opcion de entorno no valida, NODE_ENV = developement');
			commands.shift();
			break;
		}
		case '--db': {
			if(commands[index+1] === 'memory') process.env.DB = false;
			else 
				if (commands[index+1] === 'mongodb') process.env.DB = true;
					else console.log('Opcion de entorno no valida, DB = false');
			commands.shift();
			break;				
		}
		case '--h': {
			console.log('--port <number> : indica el numero de puerto')
			console.log('--debug <file1,file2,...> : indica los modulos habilitados para debug')
			console.log('--env <developement|production> : indica el entorno de ejecucion');
			console.log('--db <memory|mongodb> : indica el uso o no de MongoDB');
			process.exit(0);
		}
		default: {
			console.log('Formato erroneo en los comandos! Utilice --h para obtener ayuda');
			process.exit(0);	
		}		
	}
});
//Carga del modulo debug y del modulo principal
const debug = require('debug')('bootScript');
console.log(`Servidor en modo ${process.env.NODE_ENV} corriendo en puerto ${process.env.PORT}`);
console.log(`Base de datos: ${process.env.DB}`);
require('../server.js');
